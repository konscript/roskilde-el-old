<?php
class ItemsProject extends AppModel {

	var $name = 'ProjectsItem';
	var $actsAs = array('WhoDidIt'); 
	
	var $validate = array(
		'quantity' => array(
			'numeric' => array(
				'rule' => array('numeric'),
				'message' => 'Angiv antallet af enheder du vil tilknytte',
				'allowEmpty' => false,
			),
			'notZero' => array(
				'rule' => array('comparison', '>=', 1),
				'message' => 'Angiv minimum 1 i antal',
			),
		)
	);
	
	var $belongsTo = array(
		'Item' => array(
			'className' => 'Item',
			'foreignKey' => 'item_id',
			'conditions' => '',
			'fields' => '',
			'order' => ''
		),
		'Project' => array(
			'className' => 'Project',
			'foreignKey' => 'project_id',
			'conditions' => '',
			'fields' => '',
			'order' => ''
		)
	);

	// Finds a projects attached project items and sum the values which it returns
	function SumByProject($project_id) {
		$generic = $this->find('all', array('conditions' => array('ProjectItem.project_id' => $project_id, 'ProjectItem.item_id !=' => null), 'fields' => array('SUM(Item.power_usage*ProjectItem.quantity) as summed_power_usage')));
		$custom = $this->find('all', array('conditions' => array('ProjectItem.project_id' => $project_id, 'ProjectItem.item_id =' => null), 'fields' => array('SUM(ProjectItem.power_usage*ProjectItem.quantity) as summed_power_usage')));		       
		$total = $generic[0][0]['summed_power_usage'] + $custom[0][0]['summed_power_usage'];
		return $total; 	
	}	

	// Updates the corresponding projects DB field with the a calculated total power usage of attached project items
	function afterSave() {
		$project_id = $this->data['ProjectItem']['project_id'];
		$total = $this->SumByProject($project_id);
		$this->Project->id = $project_id;
		$this->Project->saveField('total_power_usage', $total);
		// $data = array('Project' => array('id' => $project_id, 'total_power_usage'=> $total));
		// $this->Project->save($data, false, array('Project.total_power_usage'));
	}
	
	// Updates the corresponding projects DB field with the a calculated total power usage of attached project items
	function afterDelete() {
		$project_id = $this->data['ProjectItem']['project_id'];
		$total = $this->SumByProject($project_id);
		$this->Project->id = $project_id;
		$this->Project->saveField('total_power_usage', $total);
		// $data = array('Project' => array('id' => $project_id, 'total_power_usage'=> $total));
		// $this->Project->save($data, false, array('Project.total_power_usage'));
	}	
	
	// If the Item is based on a template, fetch the data from it and populate own fields
	function afterFind($results) {
		if (!isset($results[0][0]['count'])) {
			foreach($results as $key => $val) {
				if (isset($val['ProjectItem']['item_id']) && $val['ProjectItem']['item_id'] && isset($val['Item'])) {
					$results[$key]['ProjectItem']['title'] = $val['Item']['title'];
					$results[$key]['ProjectItem']['description'] = $val['Item']['description'];
					$results[$key]['ProjectItem']['power_usage'] = $val['Item']['power_usage'];
				}
			}
		}
		return $results;
	}
	
}
?>
